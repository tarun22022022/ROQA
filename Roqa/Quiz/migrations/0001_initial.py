# Generated by Django 3.1.2 on 2022-03-02 11:41

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz_name', models.CharField(max_length=50)),
                ('quiz_instructions', models.CharField(default='', max_length=1000)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('randomizer', models.BooleanField(default=True)),
                ('one_question_per_page', models.BooleanField(default=True)),
                ('resume_later', models.BooleanField(default=False)),
                ('email_result_creator', models.BooleanField(default=False)),
                ('email_result_testtaker', models.BooleanField(default=False)),
                ('show_score_after_test', models.BooleanField(default=False)),
                ('reveal_answers_after_test', models.BooleanField(default=False)),
                ('view_after_test', models.BooleanField(default=False)),
                ('strict_mode', models.BooleanField(default=False)),
                ('camera_mode', models.BooleanField(default=False)),
                ('record_responses', models.BooleanField(default=False)),
                ('expired', models.BooleanField(default=False)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UsersGivingTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.SmallIntegerField()),
                ('questions_not_attempted', models.CharField(max_length=2000, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='question_list')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Quiz.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(max_length=100)),
                ('img', models.ImageField(upload_to='logs')),
                ('whom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Quiz.usersgivingtest')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Quiz.course')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecordedResponses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_num', models.SmallIntegerField()),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('responses', models.CharField(max_length=2000)),
                ('whom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Quiz.usersgivingtest')),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', ckeditor_uploader.fields.RichTextUploadingField()),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Quiz.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', ckeditor_uploader.fields.RichTextUploadingField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Quiz.questions')),
            ],
        ),
        migrations.CreateModel(
            name='CorrectOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', ckeditor_uploader.fields.RichTextUploadingField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Quiz.questions')),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Quiz.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
